name: New repository request

on:
  issues:
    types:
      - opened
      - reopened
      - edited

jobs:

  new-repository-request:

    runs-on: ubuntu-latest

    env:
      APPROVAL_TEAM: ${{ vars.BOOTSTRAP_REPO_MANAGERS }}
      APPROVAL_TEAM_FULL_NAME: ${{ github.repository_owner }}/${{ vars.BOOTSTRAP_REPO_MANAGERS }}

    if: contains(github.event.issue.labels.*.name, 'new-repository-request')

    steps:
      - name: Extract Repository Settings
        id: extract
        run: |
          echo "${{ github.event.issue.body }}" >> body.txt
          echo "::set-output name=repository_name::$(awk '/### Repository name/{getline; getline; print}' body.txt)"
          echo "::set-output name=repository_visibility::$(awk '/### Repository visibility/{getline; getline; print}' body.txt)"

      - name: Create Installation Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.BOOTSTRAP_APP_ID }}
          private-key: ${{ secrets.BOOTSTRAP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Rename issue
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            console.log("Title: New repository request: ${{ steps.extract.outputs.repository_name }}");
            console.log("Issue number: " + context.issue.number);
            console.log("Owner: " + context.repo.owner);
            console.log("Repo: " + context.repo.repo);

            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "New repository request: ${{ steps.extract.outputs.repository_name }}"
            })

      - name: Add comment
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Thank you for your repository creation request. We will review it shortly."
            })

      - name: Add label "waiting-for-approval"
        uses: andymckay/labeler@1.0.4
        with:
          add-labels: "waiting-for-approval"
          remove-labels: "new-repository-request, approved, rejected"

      - name: Assign issue to all Team members
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const teamMembers = await github.rest.teams.listMembersInOrg({
              org: context.repo.owner,
              team_slug: process.env.APPROVAL_TEAM
            });

            const assignees = teamMembers.data.map(member => member.login);

            console.log("Assignees: " + assignees);

            github.rest.issues.addAssignees({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              assignees: assignees
            })

      - name: Add comment
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "@" + process.env.APPROVAL_TEAM_FULL_NAME + " please review this repository creation request : \n\n - Repository name : ${{ steps.extract.outputs.repository_name }} \n\n - Repository visibility : ${{ steps.extract.outputs.repository_visibility }} \n\n Comment `/approve` to approve this request or `/reject` to reject it."
            })